######################################
## PROTOTYPING FOR JUST 2020 SEASON ##
######################################

data.2020 <- readRDS(url('https://raw.githubusercontent.com/guga31bb/nflfastR-data/master/data/play_by_play_2020.rds'))

testing <- data.2020 %>%
  filter(rush == 1, qb_scramble == 0, qb_kneel == 0, aborted_play == 0) %>%
  mutate(
    first.success = case_when(
       down == 1 & (yards_gained >= 6 | (yards_gained >= ydstogo * .40)) ~ 1)) %>%
  mutate(
    second.success = case_when(
      down == 2 & (yards_gained >= 6 | (yards_gained >= ydstogo * .50)) ~ 1)) %>%
  mutate(
    third.success = case_when(
      down == 3 & first_down == 1 ~ 1)) %>%
  mutate(
    fourth.success = case_when(
      down == 4 & first_down == 1 ~ 1))

success.rate <- testing %>%
  group_by(posteam, season) %>%
  filter(rush == 1, qb_scramble == 0, penalty == 0, qb_kneel == 0) %>%
  summarize(
    total.attempts = n(),
    first.down.success = sum(first.success, na.rm = T) / sum(rush[down == 1], na.rm = T),
    second.down.success = sum(second.success, na.rm = T) / sum(rush[down == 2], na.rm = T),
    third.and.fourth = sum(third.success, na.rm = T) + sum(fourth.success, na.rm = T),
    third.and.fourth.success = third.and.fourth / sum(rush[down > 2], na.rm = T),
    total.success = sum(first.success, na.rm = T) + sum(second.success, na.rm = T)  + sum(third.success, na.rm = T) + sum(fourth.success, na.rm = T),
    complete = total.success / total.attempts * 100)


######################################
## COLLECTING ALL SEASONS SINCE 2010 ##
######################################

seasons <- 2010:2020
pbp <- map_df(seasons, function(x) {
  readRDS(
    url(
      paste0("https://raw.githubusercontent.com/guga31bb/nflfastR-data/master/data/play_by_play_",x,".rds")
    )
  )
})

all.seasons <- pbp %>%
  filter(rush == 1, qb_scramble == 0, qb_kneel == 0, aborted_play == 0) %>%
  mutate(
    first.success = case_when(
      down == 1 & (yards_gained >= 6 | (yards_gained >= ydstogo * .40)) ~ 1)) %>%
  mutate(
    second.success = case_when(
      down == 2 & (yards_gained >= 6 | (yards_gained >= ydstogo * .50)) ~ 1)) %>%
  mutate(
    third.success = case_when(
      down == 3 & first_down == 1 ~ 1)) %>%
  mutate(
    fourth.success = case_when(
      down == 4 & first_down == 1 ~ 1))


all.success.rate <- all.seasons %>%
  group_by(posteam, season) %>%
  filter(rush == 1, qb_scramble == 0, penalty == 0, qb_kneel == 0) %>%
  summarize(
    total.attempts = n(),
    first.down.success = sum(first.success, na.rm = T) / sum(rush[down == 1], na.rm = T),
    second.down.success = sum(second.success, na.rm = T) / sum(rush[down == 2], na.rm = T),
    third.and.fourth = sum(third.success, na.rm = T) + sum(fourth.success, na.rm = T),
    third.and.fourth.success = third.and.fourth / sum(rush[down > 2], na.rm = T),
    total.success = sum(first.success, na.rm = T) + sum(second.success, na.rm = T)  + sum(third.success, na.rm = T) + sum(fourth.success, na.rm = T),
    complete = total.success / total.attempts * 100)
    
##########################################
## SCRAPPING PRO FOOTBALL REFERENCE ##
######################################

anya.2010 <- "https://www.pro-football-reference.com/years/2010/index.htm" %>% 
  read_html %>% 
  html_nodes(xpath = '//div[@id="all_passing"]//comment()') %>% 
  html_text %>%
  paste(collapse = '') %>%
  read_html %>% 
  html_table %>% 
  extract2(1)


######################################
## CLEANING THE SCRAPPED DATA ##
######################################

anya.2010$Rk <- NULL
anya.2010 <- as.data.table(anya.2010)
anya.2010 <- anya.2010[c(1:32)]
anya.2010 <- anya.2010 %>%
  select(Tm, `ANY/A`)
anya.2010$season <- "2010"

######################################
## COMBINING INTO ONE ##
######################################

anya.complete <- rbind(
  anya.2010,
  anya.2011,
  anya.2012,
  anya.2013,
  anya.2014,
  anya.2015,
  anya.2016,
  anya.2017,
  anya.2018,
  anya.2019,
  anya.2020
)


######################################
## ADDING POSTEAM REFERENCES ##
######################################

anya.complete <- anya.complete %>%
  mutate(
    posteam = case_when(
      Tm == 'Arizona Cardinals' ~ "ARI",
      Tm == 'Atlanta Falcons' ~ "ATL",
      Tm == 'Baltimore Ravens' ~ "BAL",
      Tm == 'Buffalo Bills' ~ "BUF",
      Tm == 'Carolina Panthers' ~ "CAR",
      Tm == 'Chicago Bears' ~ "CHI",
      Tm == 'Cincinnati Bengals' ~ "CIN",
      Tm == 'Cleveland Browns' ~ "CLE",
      Tm == 'Dallas Cowboys' ~ "DAL",
      Tm == 'Denver Broncos' ~ "DEN",
      Tm == 'Detroit Lions' ~ "DET",
      Tm == 'Green Bay Packers' ~ "GB",
      Tm == 'Houston Texans' ~ "HOU",
      Tm == 'Indianapolis Colts' ~ "IND",
      Tm == 'Jacksonville Jaguars' ~ "JAX",
      Tm == 'Kansas City Chiefs' ~ "KC",
      Tm == 'Las Vegas Raiders' ~ "LV",
      Tm == 'Los Angeles Chargers' ~ "LAC",
      Tm == 'Los Angeles Rams' ~ "LA",
      Tm == 'Miami Dolphins' ~ "MIA",
      Tm == 'Minnesota Vikings' ~ "MIN",
      Tm == 'New England Patriots' ~ "NE",
      Tm == 'New Orleans Saints' ~ "NO",
      Tm == 'New York Giants' ~ "NYG",
      Tm == 'New York Jets' ~ "NYJ",
      Tm == 'Philadelphia Eagles' ~ "PHI",
      Tm == 'Pittsburgh Steelers' ~ "PIT",
      Tm == 'San Francisco 49ers' ~ "SF",
      Tm == 'Seattle Seahawks' ~ "SEA",
      Tm == 'Tampa Bay Buccaneers' ~ "TB",
      Tm == 'Tennessee Titans' ~ "TEN",
      Tm == 'Washington Football Team' ~ "WAS",
      Tm == 'St. Louis Rams' ~ "LA",
      Tm == 'Oakland Raiders' ~ "LAV",
      Tm == 'San Diego Chargers' ~ "LAC",
      Tm == 'Washington Redskins' ~ "WAS"
    )
  )


######################################
## DELETING FULL REFERENCE ##
######################################

anya.complete$Tm <- NULL

######################################
## SWITCHIN ORDER OF COLUMNS ##
######################################

anya.complete <- anya.complete[,c(3,2,1)]

######################################
## CONVERTING TO NUMERIC & Name Change ##
######################################

anya.complete$season <- as.numeric(anya.complete$season)
anya.complete <- anya.complete %>%
  rename("anya" = "ANY/A")


######################################
## LEFT MERGING WITH SUCCESS RATE ##
######################################

combined.data <- left_join(all.success.rate, anya.complete, by = c("posteam" = "posteam", "season" = "season"))


######################################
## LEFT MERGING WITH TEAMS, COLORS, LOGOS ##
######################################

combined.data <- combined.data %>%
  left_join(teams_colors_logos, by = c("posteam" = "team_abbr"))
  
#####################
## PLOT 1 ###########
#####################

season.2020 <- combined.data %>%
  filter(season == 2020) %>%
  group_by(posteam)

ggplot(data = season.2020, aes(x = complete, y = reorder(posteam, complete))) +
  geom_image(aes(image = season.2020$team_logo_espn), asp = 16 / 9) +
  theme_538() +
  theme(panel.grid.major.y = element_blank()) +
  theme(axis.text.y = element_blank()) +
  scale_x_continuous(breaks = seq(45.0, 65.0, by = 1),
                     labels = function(x) paste0(x, "%")) +
  xlab("Rushing Success Rate: All Downs") +
  ylab("") +
  coord_cartesian(clip = "off") +
  geom_vline(xintercept = mean(season.2020$complete), size = 1.5) +
  theme(aspect.ratio = 9 / 16)

ggsave("rushing-success-2020.png", dpi = 400)
  
  
######################################
## KC/TB SUPER BOWL TABLE ##
######################################
  superbowl <- superbowl %>%
  left_join(teams_colors_logos, by = c("posteam" = "team_abbr"))


superbowl.success.rate <- superbowl %>%
  select(team_wordmark, first.down, first.place, second.down, second.place, third.down, third.place) %>%
  gt() %>%
  tab_spanner(
    label = "TB & KC: Rushing Success Rates Based on Down",
    columns = vars(team_wordmark, first.down, first.place, second.down, second.place, third.down, third.place)
  ) %>% 
   cols_label(
    team_wordmark = "Team",
    first.down = "1st Down Rate",
    first.place = "NFL Rank",
    second.down = "2nd Down Rate",
    second.place = "NFL Rank",
    third.down = "3rd/4th Down Rate",
    third.place = "NFL Rank"
  ) %>% 
  fmt_percent(
    columns = vars(first.down, second.down, third.down),
    decimals = 1
  ) %>%
  cols_align(
    columns = vars(team_wordmark, first.down, first.place, second.down, second.place, third.down, third.place),
    align = "center"
  ) %>%
  tab_source_note(
    source_note = md("Data: nflfastR<br>Table: @BradCongelio")
  ) %>% 
  tab_style(
    style = list(
      cell_fill(color = "#FFDB6D"),
      cell_text(style = "normal")
    ),
    locations = cells_body(
      columns = vars(first.place, second.place, third.place)
  )) %>%
  table_theme(table.width = px(550))

gtsave(superbowl.success.rate, "super-bowl-sr.png")


######################################
## ANY/A VS SUCCESS RATE PLOT ##
######################################
comparison <- combined.data %>%
  group_by(posteam) %>%
  summarize(success.rate = mean(complete),
            anya = mean(anya),
            appearances = sum(playoffs.fixed == 1))

comparison <- comparison %>%
  left_join(teams_colors_logos, by = c("posteam" = "team_abbr"))

ggplot(data = comparison, aes(x = anya, y = success.rate)) +
  geom_image(aes(image = team_logo_espn), size = comparison$appearances / 75, asp = 16 / 9) +
  theme_538() +
  theme(panel.grid.major.y = element_blank()) +
  scale_x_continuous(breaks = seq(4.5, 7.5, by = .5)) +
  scale_y_continuous(breaks = seq(45, 55, 1),
                     labels = function(x) paste0(x, "%")) +
  geom_vline(xintercept = mean(comparison$anya), size = .8, linetype = "dashed") +
  geom_hline(yintercept = mean(comparison$success.rate), size = .8, linetype = "dashed") +
  theme(aspect.ratio = 9 / 16) +
  coord_cartesian(clip = "off") +
  xlab("ANY/A") +
  ylab("Rushing Success Rate")

ggsave("sr-vs-anya.png", dpi = 400)
 
 
 ######################################
## QUICK AND DIRTY REGRESSION STUFF ##
######################################

model <- lm(pct ~ complete + anya, data = combined.data)
summary(model)

model %>%
  tbl_regression()%>%
  bold_labels() %>%
  bold_p() %>%
  cols_label(
    first.down.success = "1st Down Success"
  )







    
